
services:
  web:
    build: .
    command: sh -c "python manage.py migrate && gunicorn monitoring_platform.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy


db:
  image: postgres:15
  environment:
    POSTGRES_DB: ${DB_NAME}
    POSTGRES_USER: ${DB_USER}
    POSTGRES_PASSWORD: ${DB_PASSWORD}
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
    interval: 5s
    timeout: 5s
    retries: 5


  redis:
    image: redis:7

  celery:
    build: .
    command: celery -A monitoring_platform worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - web
      - redis

  celery-beat:
    build: .
    command: celery -A monitoring_platform beat --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - web
      - redis

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - web

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # пароль администратора Grafana
    depends_on:
      - prometheus
volumes:
  postgres_data:
  grafana_data:
  
