name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env
        run: |
          cat <<EOF > .env
          DB_NAME=testdb
          DB_USER=testuser
          DB_PASSWORD=testpassword
          SECRET_KEY=debugsecret
          POSTGRES_DB=testdb
          POSTGRES_USER=testuser
          POSTGRES_PASSWORD=testpassword
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build images
        run: docker compose build

      - name: Start services
        run: docker compose up -d db redis

      - name: Wait for database
        run: sleep 10

      # Способ 1: Используем sh -c
      - name: Run migrations
        run: docker compose run --rm web sh -c "python manage.py migrate"

      # Способ 3: Альтернатива с docker exec
      # - name: Run migrations with exec
      #   run: |
      #     docker compose up -d web
      #     sleep 5
      #     docker compose exec web python manage.py migrate
      #     docker compose stop web

      - name: Run tests
        run: docker compose run --rm web sh -c "pytest"

      - name: Shutdown services
        if: always()
        run: docker compose down -v