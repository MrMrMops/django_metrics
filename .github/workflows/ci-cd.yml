name: Django CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat <<EOF > .env
          DB_NAME=testdb
          DB_USER=testuser
          DB_PASSWORD=testpassword
          SECRET_KEY=debugsecret
          POSTGRES_DB=testdb
          POSTGRES_USER=testuser
          POSTGRES_PASSWORD=testpassword
          REDIS_URL=redis://redis:6379/0
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build images
        run: docker compose build

      - name: Start services
        run: docker compose up -d db redis

      - name: Wait for database
        run: |
          sleep 10
          docker compose ps

      - name: Run migrations
        run: docker compose run --rm web sh -c "python manage.py migrate"

      - name: Run tests
        run: docker compose run --rm web sh -c "pytest"
        
      - name: Shutdown services
        if: always()
        run: docker compose down -v

  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && success()

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #     - name: Build and push web image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/your-app:latest

  #     - name: Deploy to production
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USER }}
  #         key: ${{ secrets.SERVER_SSH_KEY }}
  #         script: |
  #           cd /path/to/your/project
  #           docker compose pull
  #           docker compose down
  #           docker compose up -d --build