name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DB_HOST=db" >> .env

      - name: Build images
        run: docker compose build

      - name: Start dependent services
        run: docker compose up -d db redis

      - name: Wait for database to be ready
        run: |
          # Ждем старта контейнера
          echo "Waiting for database container to start..."
          COUNTER=0
          until [ $(docker compose ps -q db | wc -l) -gt 0 ]; do
            sleep 2
            COUNTER=$((COUNTER+1))
            if [ $COUNTER -gt 30 ]; then
              echo "Database container failed to start!"
              docker compose logs db
              exit 1
            fi
          done
          
          DB_CONTAINER_ID=$(docker compose ps -q db)
          echo "Database container ID: $DB_CONTAINER_ID"
          
          echo "Waiting for PostgreSQL to be ready..."
          COUNTER=0
          until docker exec $DB_CONTAINER_ID pg_isready -U ${{ secrets.DB_USER }}; do
            sleep 2
            COUNTER=$((COUNTER+1))
            if [ $COUNTER -gt 30 ]; then
              echo "Database never became ready!"
              docker compose logs db
              exit 1
            fi
            echo "Attempt $COUNTER: Waiting for database..."
          done
          
          echo "Database is ready!"

      - name: Run migrations
        run: docker compose run --rm web python manage.py migrate

      - name: Run tests
        run: docker compose run --rm web pytest

      - name: Shutdown all services
        if: always()
        run: docker compose down -v