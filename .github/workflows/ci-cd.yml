name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Создаем .env ПЕРВЫМ шагом
      - name: Create .env file
        run: |
          cat <<EOF > .env
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          # Добавляем переменные для PostgreSQL контейнера
          POSTGRES_DB=${{ secrets.DB_NAME }}
          POSTGRES_USER=${{ secrets.DB_USER }}
          POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}
          EOF
          
          echo "Содержимое .env:"
          cat .env | grep -v PASSWORD

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Теперь docker compose увидит .env при запуске
      - name: Build images
        run: docker compose build

      - name: Start services
        run: docker compose up -d db redis

      - name: Verify services
        run: |
          sleep 5
          docker compose ps

      - name: Verify PostgreSQL environment
        run: |
          docker compose exec db sh -c 'echo "POSTGRES_USER: $POSTGRES_USER"'
          docker compose exec db sh -c 'echo "POSTGRES_DB: $POSTGRES_DB"'

      - name: Run migrations
        run: docker compose run --rm web python manage.py migrate

      - name: Run tests
        run: docker compose run --rm web pytest

      - name: Shutdown services
        if: always()
        run: docker compose down -v