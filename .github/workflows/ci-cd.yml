name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Обновим до v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create .env
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DB_HOST=db" >> .env  

      - name: Build images
        run: docker compose build

      - name: Start dependent services (db, redis)
        run: docker compose up -d db redis

      - name: Wait for database to be ready
        run: |
          # Ждем пока контейнер db запустится
          sleep 10
          
          # Проверяем статус healthcheck
          DB_CONTAINER_ID=$(docker compose ps -q db)
          for i in {1..10}; do
            HEALTH_STATUS=$(docker inspect --format='{{.State.Health.Status}}' $DB_CONTAINER_ID)
            echo "Database health status: $HEALTH_STATUS"
            [ "$HEALTH_STATUS" == "healthy" ] && break
            sleep 5
          done
          
          # Если после 10 попыток БД не готова - выходим с ошибкой
          [ "$HEALTH_STATUS" != "healthy" ] && echo "Database not ready!" && exit 1

      - name: Run migrations
        run: docker compose run --rm web python manage.py migrate

      - name: Run tests
        run: docker compose run --rm web pytest

      - name: Shutdown all services
        if: always()
        run: docker compose down -v